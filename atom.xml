<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[User Interfxxk]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://paki.github.io/"/>
  <updated>2015-06-13T17:59:14.000Z</updated>
  <id>http://paki.github.io/</id>
  
  <author>
    <name><![CDATA[paki]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[atom をもう一度触ってみる]]></title>
    <link href="http://paki.github.io/2015/06/14/atom-%E3%81%AB%E4%B9%97%E3%82%8A%E6%8F%9B%E3%81%88%E3%82%8B/"/>
    <id>http://paki.github.io/2015/06/14/atom-に乗り換える/</id>
    <published>2015-06-13T17:10:53.000Z</published>
    <updated>2015-06-13T17:59:14.000Z</updated>
    <content type="html"><![CDATA[<p>ここ数年エディタは sublime text が気に入っていて、 st3 のライセンスも買ったしメモ書きにもずっと使っている。最近人気の atom はだいぶ前にちょっと試してみたきり、いろいろと納得いかなくて乗り換えには至らなかった（大きめの CSS を開くとシンタックスハイライトが処理しきれずに落ちたりしてた…）。<br>ただ、2月に Frontrend Conference でたまたま見たセッション、 <strong> “Styling Atom(Editor)”</strong> （<a href="https://www.youtube.com/watch?v=y_pkHOBy1Jc" target="_blank" rel="external">動画</a>）でカスタマイズの面白さを知ったので、（もう6月になっちゃったけど）もう一度試してみることにした。</p>
<hr>
<p>sublime の時は <a href="https://github.com/bordaigorl/sublime-evernote" target="_blank" rel="external">sublime-evernote</a> というプラグインを使ってて、これで evernote の編集をしていた。markdown でも書けるし、メモの検索やタグ付けもできる。<br>当初は日本語タグにうまく対応できていなかったんだけれど、 fork してそこだけ修正して使ってたら作者が勝手に見つけて取り込んでくれた。</p>
<p>atom の場合はちょっと調べてみたところ <a href="https://atom.io/packages/ever-notedown" target="_blank" rel="external">EVND (Ever Notedown)</a> が良さそうだったが、<a href="https://www.evernote.com/shard/s68/sh/782d6000-361f-4963-b3c1-84ff6af2b625/971f599e4c39cd8f" target="_blank" rel="external">ドキュメント</a> によると環境構築がちょっとめんどうだった。<br>（保存先を作れだとかなんとか）</p>
<p>一応ひととおり内容を把握してからやりたいので続きはまた今度することにした。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ここ数年エディタは sublime text が気に入っていて、 st3 のライセンスも買ったしメモ書きにもずっと使っている。最近人気の atom はだいぶ前にちょっと試してみたきり、いろいろと納得いかなくて乗り換えには至らなかった（大きめの CSS を開くとシンタックスハ]]>
    </summary>
    
      <category term="atom" scheme="http://paki.github.io/tags/atom/"/>
    
      <category term="evernote" scheme="http://paki.github.io/tags/evernote/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ブログのソース管理と git submodule deinit]]></title>
    <link href="http://paki.github.io/2015/05/29/%E3%83%95%E3%82%99%E3%83%AD%E3%82%AF%E3%82%99%E3%81%AE%E3%82%BD%E3%83%BC%E3%82%B9%E7%AE%A1%E7%90%86%E3%81%A8-git-submodule-deinit/"/>
    <id>http://paki.github.io/2015/05/29/ブログのソース管理と-git-submodule-deinit/</id>
    <published>2015-05-28T16:41:52.000Z</published>
    <updated>2015-05-28T17:41:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="ソースも_git_で管理したかった">ソースも git で管理したかった</h2><p><code>$ hexo deploy -g</code> するとページを生成しつつ公開用に push してくれるが、生成元の markdown ファイルや _config.yaml も git で管理したかった。</p>
<p>というより、ローカルに置いといても無くしちゃうので管理する必要があった。</p>
<p>で、<a href="http://harasou.github.io/2015/04/28/hexo-%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E3%83%A1%E3%83%A2/" title="hexo セットアップメモ" target="_blank" rel="external">この記事</a> の最後の段落、「hexo をリポジトリ管理」がまさにやりたいことだったので参考にしてさっそくやってみたのだけれど…。</p>
<h2 id="init_できない">init できない</h2><p>まず、ブログのソースのあるディレクトリで <code>$ git init</code> がうまくいかない。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">Reinitialized existing Git repository <span class="keyword">in</span> &#123;パスはいる&#125;</span><br></pre></td></tr></table></figure>
<p>init した覚えないのに…と思いつつ確認してみると、 .gitignore があったので中身を確認してみる。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>
<p>なるほど、これは hexo をインストールした時点で用意してくれていたようだ。</p>
<h2 id="git_が入れ子状態">git が入れ子状態</h2><p>では、ということで add して commit したが、どうもうまくいかない…。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git commit</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  modified:   themes/apollo (modified content)</span><br><span class="line"></span><br><span class="line">no changes added to commit</span><br></pre></td></tr></table></figure>
<p>どうも、テーマファイルを追加した際に git clone したので、 git の管理が入れ子になっちゃってるみたいだった。</p>
<p>↓こんな感じ</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .git <span class="comment"># 親</span></span><br><span class="line">├── .gitignore</span><br><span class="line">├── _config.yml</span><br><span class="line">（略）</span><br><span class="line">└── themes</span><br><span class="line">    ├── apollo</span><br><span class="line">    │   ├── .git <span class="comment"># 子</span></span><br><span class="line">    │   （略）</span><br><span class="line">    │   └── _config.yaml <span class="comment"># 子を clone 後に編集した</span></span><br><span class="line">    └── landscape</span><br></pre></td></tr></table></figure>
<p>とりあえず親ディレクトリから ./themes/apollo/_config.yaml を add してみるが失敗。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add ./themes/apollo/_config.yml</span><br><span class="line">fatal: Pathspec <span class="string">'./themes/apollo/_config.yml'</span> is <span class="keyword">in</span> submodule <span class="string">'themes/apollo'</span></span><br></pre></td></tr></table></figure>
<p>仕方ないので子ディレクトリ上で変更差分を commit する。<br>これは普通にできた。</p>
<h2 id="submodule_のキャッシュをクリア">submodule のキャッシュをクリア</h2><p>submodule の設定なんてした覚えがないけれど、たぶんそういうことになっちゃってるぽいので試しに親ディレクトリで <code>submodule update</code> してみるがこれもなんかおかしい。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule update</span><br><span class="line">No submodule mapping found <span class="keyword">in</span> .gitmodules <span class="keyword">for</span> path <span class="string">'themes/apollo'</span></span><br></pre></td></tr></table></figure>
<p>検索しやすそうなエラーなのですぐに解決策がありそうな、 <a href="http://qiita.com/AtsushiShimo/items/b26c4d2033eb220bb8f9" title="Composer install したらgit submodule化してしまった" target="_blank" rel="external">それっぽい記事</a> が見つかった。<br>どうやら submodule のキャッシュを捨てれば良さそうだ。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git rm --cached themes/apollo/</span><br><span class="line">$ git add themes/apollo/</span><br><span class="line">$ git submodule deinit themes/apollo/</span><br><span class="line">$ git st</span><br></pre></td></tr></table></figure>
<p>うまくいった!!</p>
<p>このあと、あらためて <code>$ git remote add</code> などをすませて無事に当初の目的を果たした。<br>（ブログ公開用リポジトリに、別ブランチでソースを push できた）<br>やれやれ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="ソースも_git_で管理したかった">ソースも git で管理したかった</h2><p><code>$ hexo deploy -g</code> するとページを生成しつつ公開用に push してくれるが、生成元の markdown ファイルや _config.y]]>
    </summary>
    
      <category term="git" scheme="http://paki.github.io/tags/git/"/>
    
      <category term="hexo" scheme="http://paki.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rssフィードをつけた]]></title>
    <link href="http://paki.github.io/2015/05/28/rss%E3%83%95%E3%82%A3%E3%83%BC%E3%83%88%E3%82%99%E3%82%92%E3%81%A4%E3%81%91%E3%81%9F/"/>
    <id>http://paki.github.io/2015/05/28/rssフィードをつけた/</id>
    <published>2015-05-27T16:13:56.000Z</published>
    <updated>2015-05-27T16:30:52.000Z</updated>
    <content type="html"><![CDATA[<h2 id="インストールと設定">インストールと設定</h2><p><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a> をインストール</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<p>_config.yml に以下を追記</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feed:&#10;    type: atom&#10;    path: atom.xml&#10;    limit: 20</span><br></pre></td></tr></table></figure>
<h2 id="ついでにテーマもいれかえた">ついでにテーマもいれかえた</h2><p>tumblr用の人気テーマ、 <a href="https://github.com/sanographix/tumblr/tree/master/apollo" target="_blank" rel="external">Apollo</a> を誰かが hexo のテーマに改変したもの。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/joyceim/hexo-theme-apollo.git themes/apollo</span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2><ul>
<li><a href="http://qiita.com/f_prg/items/c5a465c79a9980b98495" target="_blank" rel="external">HexoのRSSフィードプラグインを使ってみる</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="インストールと設定">インストールと設定</h2><p><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-fe]]>
    </summary>
    
      <category term="hexo" scheme="http://paki.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Chrome で 0.0.0.0 が叩けない]]></title>
    <link href="http://paki.github.io/2015/05/27/Chrome-%E3%81%A6%E3%82%99-0-0-0-0-%E3%81%8B%E3%82%99%E5%8F%A9%E3%81%91%E3%81%AA%E3%81%84/"/>
    <id>http://paki.github.io/2015/05/27/Chrome-で-0-0-0-0-が叩けない/</id>
    <published>2015-05-26T17:09:27.000Z</published>
    <updated>2015-06-15T16:24:11.000Z</updated>
    <content type="html"><![CDATA[<p><ins></ins></p>
<h2 id="2015-06-15_追記">2015-06-15 追記</h2><p>いつのまにか直接入力しても検索扱いにならなくなっていた。<br>（chrome 43.0.2357.81 にて確認）<br></p>
<hr>
<h2 id="検索扱いになってしまう">検索扱いになってしまう</h2><p><code>hexo server</code> すると URL が表示される。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">INFO  Hexo is running at http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">4000</span>/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>この <code>http://0.0.0.0:4000/</code> は chrome のアドレスバー（Omnibox）にコピペしても開くことができない。<br>Omnibox は 0 で始まる文字列をURLとして取り扱わないで、検索キーワードとしてgoogle検索にかけてしまうようだ。</p>
<h2 id="解決">解決</h2><p>デフォルトのブラウザが chrome なら、</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -o</span><br></pre></td></tr></table></figure>
<p>とするか、<br>サーバ起動後に別タブで</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ open http://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">4000</span>/</span><br></pre></td></tr></table></figure>
<p>とすれば検索扱いにならずにちゃんと開くことができる。</p>
<p>（とりあえず、<code>http://127.0.0.1:4000/</code> や <code>http://localhost:4000/</code> としてもいいけどなんとなく指定通りのアドレスで開きたかったので…）</p>
<hr>
<p>この <code>0.0.0.0</code> は <code>127.0.0.1</code> や <code>localhost</code> と同じようなもんだと思ってたんだけど、どうも本来はそのように定義されていないのに習慣的に同じにされちゃってるだけのことみたいらしい。<br>なので、むしろ本来は「0.0.0.0を明示的なURLとして扱うほうがバグっぽい」ことになるらしい…。</p>
<h2 id="参考">参考</h2><ul>
<li><a href="https://code.google.com/p/chromium/issues/detail?id=428046" target="_blank" rel="external">Issue 428046:  Omnibox refuses to allow navigation to 0.0.0.0</a></li>
<li><a href="https://code.google.com/p/chromium/issues/detail?id=466329" target="_blank" rel="external">Issue 466329: Can’t visit 0.0.0.0:4200 URLs with a path (i.e., 0.0.0.0:4200/some_path/file.ext)</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><ins></ins></p>
<h2 id="2015-06-15_追記">2015-06-15 追記</h2><p>いつのまにか直接入力しても検索扱いにならなくなっていた。<br>（chrome 43.0.2357.81 にて確認）<br></p>
<hr>
<h2 i]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexoでブログつくった]]></title>
    <link href="http://paki.github.io/2015/05/26/hexo%E3%81%A6%E3%82%99%E3%83%95%E3%82%99%E3%83%AD%E3%82%AF%E3%82%99%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%9F/"/>
    <id>http://paki.github.io/2015/05/26/hexoでブログつくった/</id>
    <published>2015-05-25T18:43:40.000Z</published>
    <updated>2015-05-27T16:21:20.000Z</updated>
    <content type="html"><![CDATA[<h2 id="ジェネレータの選定">ジェネレータの選定</h2><p>もともと jekyll でなんかやってみようかと思っていたけど、だいぶ時間があいてしまったのであらためてジェネレータを調査するところから。</p>
<p>静的サイトジェネレータ一覧サイト <a href="https://staticsitegenerators.net/" target="_blank" rel="external">Static Site Generators</a> でなんとなくあたりをつけてみる。</p>
<p><a href="http://hubpress.io/" target="_blank" rel="external">HubPress</a> なんかも面白そうだったけど Github Pages に束縛されてしまう…。</p>
<p>結果、 以下の点が気に入ったので <a href="http://hexo.io/" target="_blank" rel="external">hexo</a> にすることにした。</p>
<ul>
<li>ローカルで確認しやすい</li>
<li>markdown で投稿できる</li>
<li>jekyll とか octpress とかよりは新しめ</li>
<li>npm で管理できる</li>
<li>テンプレートエンジンの ejs がなんとなくとっつきやすそうだった</li>
</ul>
<p>※投稿するだけならテンプレートをいじる必要ないです</p>
<h2 id="準備">準備</h2><p>LIGの <a href="http://liginc.co.jp/web/programming/server/104594" target="_blank" rel="external">hexo紹介記事</a> を見ながらインストール。<br>（ちゃんとまとめると執筆にけっこう時間がかかりそうなので、会社のPRも兼ねてとはいえ大変だろうな〜と思う…。ありがとうございます。）</p>
<p>ただ、今回インストールした hexo: 3.1.1 ではデプロイのところでこんなエラーが出る。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy -g</span><br><span class="line">（省略）</span><br><span class="line">ERROR Deployer not found: github</span><br></pre></td></tr></table></figure>
<p>適当にググったところ <a href="https://github.com/hexojs/hexo/issues/1040#issuecomment-104904448" target="_blank" rel="external">hexoのissue</a>  に解決法があった。</p>
<p>_config.yml の deploy type のとこを編集<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:&#10;  type: git # github &#12391;&#12399;&#12394;&#12367; git &#12434;&#25351;&#23450;</span><br></pre></td></tr></table></figure></p>
<p>hexo-deployer-git を追加でインストール<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>
<p>これで <code>$ hexo deploy -g</code> できるようになる。</p>
<p>そのまま、この記事を書いてデプロイして完了。<br>「3分」とはいかなかったけど、シンプルな手順なので wordpress の管理画面開くよりも早くて簡単!!</p>
<h2 id="参考">参考</h2><ul>
<li><a href="http://liginc.co.jp/web/programming/server/104594" target="_blank" rel="external">所要時間3分!? Github PagesとHEXOで爆速ブログ構築してみよう！</a></li>
<li><a href="http://qiita.com/okmttdhr/items/82ecb0332835472e905f" target="_blank" rel="external">Github Pagesでブログ構築ができる静的サイトジェネレーター総まとめ</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="ジェネレータの選定">ジェネレータの選定</h2><p>もともと jekyll でなんかやってみようかと思っていたけど、だいぶ時間があいてしまったのであらためてジェネレータを調査するところから。</p>
<p>静的サイトジェネレータ一覧サイト <a href="h]]>
    </summary>
    
      <category term="hexo" scheme="http://paki.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>